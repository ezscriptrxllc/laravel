name: Deploy Workflow

on:
  pull_request:
    branches:
      - main
      - 'release/**'
      - develop

  push:
    branches:
      - main
      - 'release/**'
      - develop

jobs:
  pr-tests:
    runs-on: ubuntu-latest

#    services:
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_DATABASE: laravel
#          MYSQL_USER: ez
#          MYSQL_PASSWORD: secret
#          MYSQL_ROOT_PASSWORD: secretroot
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - uses: actions/checkout@v3

#      - name: Verify MySQL connection
#        run: |
#          mysql --version
#          sudo apt-get install -y mysql-client
#          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uez -psecret -e "SHOW DATABASES"

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Run Sail
        run: ./vendor/bin/sail up -d

      - name: Install Dependencies
        run: sail composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs

      - name: Generate key
        run: sail artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Seed database
        run: sail artisan migrate --force --seed

      - name: Execute tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: sail artisan test

      - name: REST API with curl
        run: |
          curl -X GET "http://localhost/api/users"

      - name: REST API with curl 2
        run: |
          curl -X GET "http://localhost:8000/api/users"

      - uses: matt-ball/newman-action@master
        with:
          collection: tests/newman/postman_collection.json
          delayRequest: 5000
          envVar: '[{ "key": "url", "value": "http://localhost:8000/api" }]'

      - if: ${{ github.event_name == 'push' }}
        name: Set Forge Webhook
        id: deployment_webhook
        run: |
          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "::set-output name=url::${{ secrets.FORGE_LIVE_DEPLOYMENT_WEBHOOK }}"
          fi
          if [[ "${{github.base_ref}}" == "release" || "${{github.ref}}" == "refs/heads/release" ]]; then
            echo "::set-output name=url::${{ secrets.FORGE_DEMO_DEPLOYMENT_WEBHOOK }}"
          fi
          if [[ "${{github.base_ref}}" == "develop" || "${{github.ref}}" == "refs/heads/develop" ]]; then
            echo "::set-output name=url::${{ secrets.FORGE_TEST_DEPLOYMENT_WEBHOOK }}"
          fi

      - if: ${{ github.event_name == 'push' }}
        name: Deploy to Forge
        run: curl ${{ steps.deployment_webhook.outputs.url }}
